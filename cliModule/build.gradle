apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8

//For plugin application, see https://docs.gradle.org/current/userguide/application_plugin.html
mainClassName = "npk.pspValidator.cli.Main"

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

/*tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}*/

dependencies {
    //testCompile 'junit:junit:4.12'
    //compile project(':sharedModule')
    //compile 'commons-cli:commons-cli:1.3.1'
    //compile 'commons-cli:commons-cli:1.4-SNAPSHOT'

    //gradle 5, 6
    testImplementation 'junit:junit:4.12'
    implementation project(':sharedModule')
    implementation 'commons-cli:commons-cli:1.3.1'
}

group 'nkp.pspValidator'
version '2.3'

//https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Komplexni validator CLI',
                'Implementation-Version': version,
                'Main-Class': 'npk.pspValidator.cli.Main'
    }
    baseName = 'KomplexniValidatorCLI'
    //https://stackoverflow.com/questions/47910578/not-able-to-copy-configurations-dependencies-after-upgrading-gradle-plugin-for-a
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    //from { configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) } }
    //from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//tasks:
//gradle run - spusti Main (plugin application)
//gradle fatJar - vybuildi jar v cliModule/build/libs

//since gradle 4.9 we can use --args:
//gradle run --args="--version"
//gradle run --args="--help"
//gradle run --args="--action VALIDATE_PSP --config-dir CONFIG_DIR --psp PSP_DIR"
