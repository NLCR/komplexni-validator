<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="fDMF">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="description" minOccurs="0"/>
                <xs:element name="namespaces" type="namespacesType" minOccurs="0"/>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="pattern-def" type="pattern-defType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="value-def" type="value-defType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="rules-section" type="rules-sectionType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="namespacesType">
        <xs:sequence>
            <xs:element type="xs:string" name="namespace-mets">
                <xs:annotation>
                    <xs:documentation>prefix mets</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-mods">
                <xs:annotation>
                    <xs:documentation>prefix mods</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-oai_dc">
                <xs:annotation>
                    <xs:documentation>prefix oai_dc</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-dublin_core">
                <xs:annotation>
                    <xs:documentation>prefix dc</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-alto">
                <xs:annotation>
                    <xs:documentation>prefix alto</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-copyright_md">
                <xs:annotation>
                    <xs:documentation>prefix cmd</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-mix">
                <xs:annotation>
                    <xs:documentation>prefix mix</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-premis">
                <xs:annotation>
                    <xs:documentation>prefix premis</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element type="xs:string" name="namespace-xlink">
                <xs:annotation>
                    <xs:documentation>prefix xlink</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="pattern-defType">
        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0"/>
            <xs:element name="expression" type="expressionType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="expressionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="caseSensitive" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="value-defType">
        <xs:sequence>
            <xs:element type="xs:string" name="description" minOccurs="0"/>
            <xs:element type="value-refType" name="value-ref" minOccurs="0"/>
            <xs:element type="evaluationType" name="evaluation" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name"/>
        <!--TODO: omezity typy-->
        <xs:attribute type="dataValueType" name="type"/>
    </xs:complexType>

    <xs:complexType name="value-refType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="evaluationType">
        <xs:sequence>
            <xs:element type="paramsType" name="params"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="functionName"/>
    </xs:complexType>

    <xs:complexType name="paramsType">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="value" type="valueType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="pattern" type="patternType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="valueType" mixed="true">
        <xs:sequence>
            <xs:element type="value-refType" name="value-ref" minOccurs="0"/>
            <xs:element type="evaluationType" name="evaluation" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name"/>
        <xs:attribute type="dataValueType" name="type"/>
    </xs:complexType>

    <xs:complexType name="patternType">
        <xs:choice>
            <xs:element name="pattern-ref" type="pattern-refType"/>
            <xs:element name="expression" type="expressionType" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="pattern-refType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="name"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="rules-sectionType" mixed="true">
        <xs:sequence>
            <xs:element type="ruleType" name="rule" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute type="xs:string" name="name"/>
        <xs:attribute type="xs:string" name="description" use="optional"/>
    </xs:complexType>

    <xs:complexType name="ruleType">
        <xs:sequence>
            <xs:element name="description" type="xs:string"/>
            <xs:element name="validation" type="validationType"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="validationType">
        <xs:sequence>
            <xs:element name="params" type="paramsType"/>
        </xs:sequence>
        <xs:attribute name="functionName" type="xs:string"/>
    </xs:complexType>

    <xs:simpleType name="dataValueType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BOOLEAN"/>
            <xs:enumeration value="STRING"/>
            <xs:enumeration value="STRING_LIST"/>
            <xs:enumeration value="INTEGER"/>
            <xs:enumeration value="INTEGER_LIST"/>
            <xs:enumeration value="FILE"/>
            <xs:enumeration value="FILE_LIST"/>
            <xs:enumeration value="IDENTIFIER"/>
            <xs:enumeration value="IDENTIFIER"/>
            <xs:enumeration value="IDENTIFIER_LIST"/>
            <xs:enumeration value="IDENTIFIER_LIST_LIST"/>
            <xs:enumeration value="LEVEL"/>
            <!--TODO: opravdu tohle jako typy hodnot?-->
            <xs:enumeration value="IMAGE_COPY"/>
            <xs:enumeration value="IMAGE_UTIL"/>
            <xs:enumeration value="ENTITY_TYPE"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>