<dmf>

    <description>
        Zde jsou definovány proměnné. K jejich vyhodnocení jsou použity funkce, další proměnné, vzory a
        konstanty.
        Proměnné je možné dynamicky doplňovat/upravovat.
        Nesmí ale nastat situace cyklu, tedy že by hodnota proměnné X závisela na proměnné/vzoru Y, která by závisela na
        proměnné X.
        Proměnné mohou obsahovat pouze velká písmena latinské abecedy, číslice a znaky '-','_';
    </description>


    <!--tj. musi byt dodano pres GUI nebo CLI-->
    <value-def name="PSP_DIR" type="FILE">
        <evaluation functionName="PROVIDED_FILE">
            <params>
                <value-param name="var_name" type="STRING">PSP_DIR</value-param>
            </params>
        </evaluation>
    </value-def>

    <value-def name="INFO_FILES" type="FILE_LIST">
        <evaluation functionName="FIND_FILES_IN_DIR_BY_PATTERN">
            <params>
                <value-param name="dir" type="FILE">
                    <value-ref name="PSP_DIR"/>
                </value-param>
                <pattern-param name="pattern">
                    <pattern-ref name="INFO_FILENAME"/>
                </pattern-param>
            </params>
        </evaluation>
    </value-def>

    <!--
        podobne
        PRIMARY-METS_FILES
        CHECKSUM_FILES
        TOLERATED_TL_FILES
    -->


    <value-def name="INFO_FILE" type="FILE">
        <evaluation functionName="RETURN_FIRST_FILE_FROM_LIST">
            <params>
                <value-param name="list" type="FILE_LIST">
                    <value-ref name="INFO_FILES"/>
                </value-param>
            </params>
        </evaluation>
    </value-def>

    <!--
        podobne
        PRIMARY-METS_FILE
        CHECKSUM_FILE
    -->


    <value-def name="SECONDARY-METS-DIR_FILES" type="FILE_LIST">
        <evaluation functionName="FIND_FILES_IN_DIR_BY_PATTERN">
            <params>
                <value-param name="dir" type="FILE">
                    <value-ref name="PSP_DIR"/>
                </value-param>
                <pattern-param name="pattern">
                    <pattern-ref name="SECONDARY-METS-DIR_FILENAME"/>
                </pattern-param>
            </params>
        </evaluation>
    </value-def>

    <!--
    podobne
    OCR-TEXT-DIR_FILES
    OCR-ALTO-DIR_FILES
    MASTER-COPY-DIR_FILES
    USER-COPY-DIR_FILES
    -->


    <value-def name="SECONDARY-METS-DIR_FILE" type="FILE">
        <evaluation functionName="RETURN_FIRST_FILE_FROM_LIST">
            <params>
                <value-param name="list" type="FILE_LIST">
                    <value-ref name="SECONDARY-METS-DIR_FILES"/>
                </value-param>
            </params>
        </evaluation>
    </value-def>

    <!--
    podobne
    OCR-TEXT-DIR_FILE
    OCR-ALTO-DIR_FILE
    MASTER-COPY-DIR_FILE
    USER-COPY-DIR_FILE
    -->

    <value-def name="SECONDARY-METS_FILES" type="FILE_LIST">
        <evaluation functionName="FIND_FILES_IN_DIR_BY_PATTERN">
            <params>
                <value-param name="dir" type="FILE_LIST">
                    <value-ref name="SECONDARY-METS-DIR_FILE"/>
                </value-param>
                <pattern-param name="pattern">
                    <pattern-ref name="SECONDARY-METS_FILENAME"/>
                </pattern-param>
            </params>
        </evaluation>
    </value-def>

    <!--
    podobne
    OCR-TEXT_FILES
    OCR-ALTO_FILES
    MASTER-COPY_FILES
    USER-COPY_FILES
    -->


    <!--soubory XSD-->

    <value-def name="INFO_XSD_FILE" type="FILE">
        <evaluation functionName="PROVIDED_FILE">
            <!--tj. musi byt dodano pres GUI nebo CLI na zaklade konkretni fDMF-->
            <params>
                <value-param name="var_name" type="STRING">INFO_XSD_FILE</value-param>
            </params>
        </evaluation>
    </value-def>

    <!--TODO: podobne ostatni XSD-->


    <!--zpracování INFO-->
    <!--todo: implementovat ef-->
    <!--<variable name="INFO_ITEMTOTAL" type="INTEGER">
        <description>hodnota /info/itemlist/@itemtotal ze souboru INFO</description>

        <evaluation functionName="GET_INT_BY_XPATH">
            <params>
                <param name="file">
                    <variable name="INFO_FILE"/>
                </param>
                <param name="xpath">
                    <xpath>/info/itemlist/@itemtotal</xpath>
                </param>
            </params>
        </evaluation>
    </variable>-->

    <!--todo: implementovat ef-->
    <!--<variable name="INFO_ITEMS" type="STRING_LIST">
        <description>seznam hodnot /info/itemlist/item ze souboru INFO</description>
        <evaluation functionName="GET_STRING_LIST_BY_XPATH">
            <params>
                <param name="file">
                    <variable name="INFO_FILE"/>
                </param>
                <param name="xpath">
                    <xpath>/info/itemlist/item</xpath>
                </param>
            </params>
        </evaluation>
    </variable>-->

    <!--TEST, takhle by mohlo definovani promene nove vypadat se obema typy parametru  (hodnota, vzor) a obema typy zapisu - odkazem a definici-->


    <!--TEST: ruzne moznosti hodnoty pres definici-->


</dmf>