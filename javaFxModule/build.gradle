/*

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}
*/

println "Java home: " + System.properties['java.home']

//https://github.com/FibreFoX/javafx-gradle-plugin

group 'nkp.pspValidator'
version '2.1'

//sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

/*
tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}
*/

buildscript {
    apply from: './version.gradle'
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: "${gradle.javafxGradlePluginVersion}"
        //classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: "8.7.0"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
}
apply plugin: 'java'

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.11'
    //compile 'org.controlsfx:controlsfx:8.40.12'
    //compile 'org.controlsfx:controlsfx:8.0.2'
    compile project(':sharedModule')
    //compile 'org.controlsfx:controlsfx:8.0.2'
    //compile 'org.controlsfx:controlsfx:8.0.2-developer-preview-2'
    compile 'joda-time:joda-time:2.10.1'
}

repositories {
    mavenCentral()
}

apply plugin: 'javafx-gradle-plugin'


jfx {
    verbose = true
    mainClass = 'nkp.pspValidator.gui.Main'
    jfxAppOutputDir = "build/jfx/app"
    jfxMainAppJarName = "KomplexniValidatorGUI.jar"
    deployDir = "src/main/deploy"
    useEnvironmentRelativeExecutables = true
    libFolderName = "lib"

    // gradle jfxRun
    runJavaParameter = '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005'
    //runJavaParameter = ['-Xdebug','-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005']


    // gradle jfxNative
    identifier = 'nkp.pspValidator-gui'
    vendor = 'NKP'
    //https://github.com/FibreFoX/javafx-gradle-plugin/issues/27
    //bundler = 'dmg'
    //bundler = 'exe,linux.app,deb,rpm,dmg'
    //bundler = 'exe'
    //bundler = 'linux.app'
    // vytvori javaFxModule\build\jfx\native\KomplexniValidator, jeste je potreba pridat fDMF a vyrobit instalator

    //bundler = 'windows.app'//bundler='ALL'
    appName = 'KomplexniValidatorGUI'
    nativeReleaseVersion = "2.1"

    //additionalAppResources = ['../sharedModule/src/main/resources/nkp/pspValidator/shared','src/main/resources/config']
    additionalAppResources = '../sharedModule/src/main/resources/nkp/pspValidator/shared'
}

//tasks:

//jfxJar
//Vytvori javaFxModule/build/jfx/app, ktery obsahuje pspValidator-gui.jar a adresar lib s potrebnymi knihovnami, bez jre
//Tohle se bude distribuovat (v zip, tar.gz) pro ostatni platformy (32b Win, ...) a jeste s pridanim fDMF

//jfxNative

//bundler = 'windows.app'
//V javaFxModule\build\jfx\native\KomplexniValidator vytvori KomplexniValidator.exe, adresar app s .jar, pribalenym jre, zatim
//Tohle pouzit s necim jako Inno Setup a vyrobit instalator vcetne fDMF

//bundler = 'exe'
//Vytvori instalator javaFxModule\build\jfx\native\KomplexniValidatorGUI-version.exe

//32b instalator Win bude problem: https://github.com/FibreFoX/javafx-gradle-plugin/issues/22

//jfxRun -  Create the JavaFX-jar and runs it like you would do using java -jar my-project-jfx.jar, adjustable using runJavaParameter/runJavaParameter-parameter
//jfxListBundlers - Shows available bundlers

//TODO: Ubuntu icons
//http://stackoverflow.com/questions/36311638/javafx-ubuntu-stage-dock-icon-wont-work/36316722#36316722




