<validationFunctions>
    <description>
        Zde jsou definovány validační funkce, které využívají jednotlivá validační pravidla.
        Tento soubor je jen informativní a neměl by být měněn ani doplňován. Samotné validace včetně jmen, typů
        a počtů parametrů a zejména samotné implementace jsou definovány v kódu validátoru.
    </description>

    <validationFunction name="checkFilelistHasExactSize">
        <description>Zkontroluje, že má seznam souborů očekávanou velikost.</description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
            <value name="size" type="INTEGER" description="Expected size of list"/>
            <value name="level" type="LEVEL" minOccurs="0"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkFilelistSizeInRange">
        <description>Zkontroluje, že má seznam souborů velikost v očekávaném rozsahu hodnot.</description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
            <value name="min_size" type="INTEGER" minOccurs="0"/>
            <value name="max_size" type="INTEGER" minOccurs="0"/>
            <value name="level" type="LEVEL" minOccurs="0"/>
        </params-def>
    </validationFunction>

    <!--TODO: implement-->
    <validationFunction name="CHECK_LIST_EMPTY">
        <description>Zkontroluje, že je seznam souborů je prázdný.</description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkAllFileListsHaveSameSize">
        <description>Zkontroluje, že mají všechny seznamy souborů stejnou velikost.</description>
        <params-def>
            <value name="files" type="FILE_LIST" description="List of files" min="2" max="unbound"/>
            <value name="files_optional" type="FILE_LIST" description="List of files, ignored if empty" max="unbound"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkFilenameMatchesPattern">
        <description>Zkontroluje, že název souboru odpovídá vzoru.</description>
        <params-def>
            <value name="level" type="LEVEL"/>
            <value name="file" type="FILE"/>
            <pattern name="pattern" description="Pattern to match"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkAllFilenamesMatchPattern">
        <description>Zkontroluje, že jména všech souborů odpovídají vzoru.</description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
            <pattern name="pattern" description="Pattern to match"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkAllFilesInUtf8">
        <description>Zkontroluje, že všechny soubory jsou v kódování UTF-8</description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkFileIsDir">
        <description>Zkontroluje, že soubor existuje a je adresář (tedy zda není obyčejný soubor). Pokud je ignoreIfFileIsNull=true a soubor parametry file
            obsahuje null, není vyhozena výjimka, ale vyhodnocení skončí bez detekce chyby.
        </description>
        <params-def>
            <value name="file" type="FILE"/>
            <value name="ignoreIfFileIsNull" type="BOOLEAN" minOccurs="0"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkFileIsNotDir">
        <description>Zkontroluje, že soubor existuje a není adresář (tedy zda je obyčejný soubor).</description>
        <params-def>
            <value name="file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkNoFileIsDir">
        <description>Zkontroluje, že každý ze souborů existuje a žádný z nich není adresář (tedy zda je obyčejný
            soubor).
        </description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkNoOtherFilesInDir">
        <description>Zkontroluje, že adresář neobsahuje žádné další soubory kromě vyjmenovaných. Všechny vyjmenované
            soubory ale nemusí nutně patřit do adresáře.
        </description>
        <params-def>
            <value name="root_dir" type="FILE" description="root dir"/>
            <value name="file" type="FILE" minOccurs="0" maxOccurs="unbound"/>
            <value name="files" type="FILE_LIST" minOccurs="0" maxOccurs="unbound"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkFilenamesLengthsSame">
        <description>Zkontroluje, že všechny soubory existují a jejich jména mají stejnou délku.</description>
        <params-def>
            <value name="files" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkChecksumFileGeneratedByGrammar">
        <description>Zkontroluje, že předepsaná gramatika pro CHECKSUM generuje obsah souboru.</description>
        <params-def>
            <value name="checksum_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkChecksumFileAllPathsMatchFiles">
        <description>Zkontroluje, že soubor CHECKSUM obsahuje záznamy pro každý uvedený soubor a žádný jiný.
        </description>
        <params-def>
            <value name="checksum_file" type="FILE"/>
            <value name="file" type="FILE" minOccurs="0" maxOccurs="unbound"/>
            <value name="files" type="FILE_LIST" minOccurs="0" maxOccurs="unbound"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkChecksumFileAllChecksumsMatch">
        <description>Zkontroluje, že provedené kontrolní součty, pro každý soubor uvedený v souboru CHECKSUM,
            souhlasí.
        </description>
        <params-def>
            <value name="checksum_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkXmlIsWellBuilt">
        <description>Zkontroluje, že soubor obsahuje korektní xml (well-built).</description>
        <params-def>
            <value name="xml_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkXmlIsValidByXsd">
        <description>Zkontroluje, že soubor (soubory) obsahuje (obsahují) xml validní podle XML Schema (XSD).
        </description>
        <params-def>
            <value name="xsd_file" type="FILE"/>
            <value name="xml_file" type="FILE"/>
            <value name="xml_files" type="FILE_LIST"/>
            <value name="level" type="LEVEL" description="Úroveň chybové hlášky, pokud neprojde validace podle XSD."
                   minOccurs="0" maxOccurs="1"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkInfoFileReferencesPrimaryMets">
        <description>Zkontroluje, že se soubor INFO odkazuje na soubor PRIMARY-METS přes element mainMets.</description>
        <params-def>
            <value name="info_file" type="FILE"/>
            <value name="primary-mets_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkInfoFileItemsCountMatchesItemtotal">
        <description>Zkontroluje, že v souboru INFO počet elementů item souhlasí s hodnotou atributu itemtotal elementu
            itemlist.
        </description>
        <params-def>
            <value name="info_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkInfoFileItemlistReferencesAllFiles">
        <description>Zkontroluje, že se soubor INFO odkazuje na všechny uvedené soubory přes elementy item a na žádné
            další.
        </description>
        <params-def>
            <value name="info_file" type="FILE"/>
            <value name="level" type="LEVEL"
                   description="Úroveň chybové hlášky, pokud se neodkazuje na specifikovaný soubor, nebo se odkazuje na nespecifikovaný soubor."/>
            <value name="file" type="FILE" min="0" max="unbound"/>
            <value name="files" type="FILE_LIST" min="0" max="unbound"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkInfoFileChecksumMatches">
        <description>Zkontroluje, že se soubor INFO odkazuje na existující soubor CHECKSUM přes element checksum a že se
            kontrolní součet shoduje.
        </description>
        <params-def>
            <value name="info_file" type="FILE"/>
            <value name="checksum_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkIdentifiersNoDuplicateTypes">
        <description>Zkontroluje, že seznamy identifikátorů neobsahují více identifikátorů stejného typu.
        </description>
        <params-def>
            <value name="identifier_list" type="IDENTIFIER_LIST" min="0" maxOccurs="unbounded"
                   description="seznam identifikátorů, v jehož rámci se kontroluje přítomnost duplikátů"/>
            <value name="identifier_list_list" type="IDENTIFIER_LIST_LIST" min="0" maxOccurs="unbounded"
                   description="seznam seznamů identifikátorů; kontrola na přítomnost duplikátů se provádní v rámci jednotlivých seznamů"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkIdentifiersNoDuplicates">
        <description>Zkontroluje, že seznamy identifikátorů neobsahují více identifikátorů stejného typu a hodnoty.
        </description>
        <params-def>
            <value name="identifier_list" type="IDENTIFIER_LIST" min="0" maxOccurs="unbounded"
                   description="seznam identifikátorů, v jehož rámci se kontroluje přítomnost duplikátů"/>
            <value name="identifier_list_list" type="IDENTIFIER_LIST_LIST" min="0" maxOccurs="unbounded"
                   description="seznam seznamů identifikátorů; kontrola na přítomnost duplikátů se provádní v rámci jednotlivých seznamů"/>
            <value name="ignored_type_list" type="STRING_LIST" min="0"
                   description="seznam typů identifikátorů, které budou ignorovány"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkIdentifiersAllTypesPresent">
        <description>Zkontroluje, že seznamy identifikátorů obsahují všechny požadované typy identifikátorů.
        </description>
        <params-def>
            <value name="identifier_list" type="IDENTIFIER_LIST" min="0" maxOccurs="unbounded"
                   description="seznam identifikátorů, v jehož rámci se kontroluje přítomnost identifikátorů"/>
            <value name="identifier_list_list" type="IDENTIFIER_LIST_LIST" min="0" maxOccurs="unbounded"
                   description="seznam seznamů identifikátorů; kontrola na přítomnost identifikátorů se provádní v rámci jednotlivých seznamů"/>
            <value name="id_types" type="STRING_LIST" description="typy identifikátorů"/>
            <value name="level_name" type="STRING" description="název úrovně popisu"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkIdentifiersNoneTypePresent">
        <description>Zkontroluje, že seznamy identifikátorů neobsahují žádný s typů identifikátorů.
        </description>
        <params-def>
            <value name="identifier_list" type="IDENTIFIER_LIST" min="0" maxOccurs="unbounded"
                   description="seznam identifikátorů, v jehož rámci se kontroluje přítomnost identifikátorů"/>
            <value name="identifier_list_list" type="IDENTIFIER_LIST_LIST" min="0" maxOccurs="unbounded"
                   description="seznam seznamů identifikátorů; kontrola na přítomnost identifikátorů se provádní v rámci jednotlivých seznamů"/>
            <value name="id_types" type="STRING_LIST" description="typy identifikátorů"/>
            <value name="level_name" type="STRING" description="název úrovně popisu"/>
        </params-def>
    </validationFunction>

    <!--DEPRECATED, replaced with checkStringDerivedFromUrnnbnOrUuid -->
    <validationFunction name="checkStringDerivedFromOneOfIdentifiers">
        <description>Ověří, že řetězec je odvozen od některého z identifikátoru. Vztah "být
            odvozen" zde chápeme tak, A je odvozen od B právě tehdy, když A i B obsahují shodný podřetězec o určené
            minimální
            délce. Před kontrolou se odstraňují vybrané prefixy identifikátorů.
        </description>
        <params-def>
            <value name="string" type="STRING"/>
            <value name="identifiers" type="IDENTIFIER_LIST"/>
            <value name="min_match_length" type="INTEGER"/>
            <value name="id_prefixes" type="STRING_LIST"
                   description="Prefixy hodnot identifikátorů, které budou odstraněny před hledáním shody. Delší varianty prefixů by měly být v seznamu dříve."/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkStringDerivedFromUrnnbnOrUuid">
        <description>Ověří, že řetězec je odvozen od identifkátoru URN:NBN nebo UUID.
            Odvození je definováno následovně:
            - odvození od URN:NBN znamená převzetí celé zbylé části za prefixem "urn:nbn:cz:",
            např: urn:nbn:cz:osa001-001kl9 -> osa001-001kl9
            - odvození od UUID znamná převzetí celé zbylé části za prefixem "uuid:",
            např. uuid:21d5eff0-d9aa-11de-a7ba-000d606f5dc6 -> 21d5eff0-d9aa-11de-a7ba-000d606f5dc6
        </description>
        <params-def>
            <value name="string" type="STRING"/>
            <value name="identifiers" type="IDENTIFIER_LIST"
                   description="Seznam identifikátorů, měl by obsahovat existující identifikátory typu 'uuid' a/nebo 'urnnbn'"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkDcIdentifiersDoNotContainWhiteSpaces">
        <params-def>
            <value name="primary-mets_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkUrnNbnIdentifiersValid">
        <description>Ověří, že všechny identifikátory typu urnnbn mají platnou podobu.</description>
        <params-def>
            <value name="identifier_list" type="IDENTIFIER_LIST"
                   description="Seznam identifikátorů, použity budou jen ty, které jsou typu urnnbn."/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkUrnNbnIdentifiersRegistered">
        <description>Ověří, že všechny identifikátory typu urnnbn jsou registrovány v URN:NBN Resolveru NKP.</description>
        <params-def>
            <value name="identifier_list" type="IDENTIFIER_LIST"
                   description="Seznam identifikátorů, použity budou jen ty, které jsou typu urnnbn."/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkDcIdentifiersHaveTypeAndValue">
        <params-def>
            <value name="primary-mets_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkPrimaryMetsFilesecContainsAllFilegroups">
        <params-def>
            <value name="primary-mets_file" type="FILE"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkFileListsMatch">
        <description>Zkontroluje, že dva seznamy souborů obsahují stejné soubory.</description>
        <params-def>
            <value name="expected_files" type="FILE_LIST"/>
            <value name="found_files" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkMetsFilesecSizesMatch">
        <params-def>
            <value name="psp_dir" type="FILE"/>
            <value name="mets_file" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkMetsFilesecChecksumsMatch">
        <params-def>
            <value name="psp_dir" type="FILE"/>
            <value name="mets_file" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkBinaryFilesValidByExternalUtil">
        <params-def>
            <value name="no_files_problem_level" type="LEVEL" minOccurs="0" maxOccurs="1"
                   description="úroveň chybové hlášky, pokud je seznam souborů prázdný, defaultně ERROR"/>
            <value name="files" type="FILE_LIST"/>
            <value name="type" type="RESOURCE_TYPE"/>
            <value name="util" type="EXTERNAL_UTIL"/>
            <value name="execution" type="STRING"/>
            <value name="validation_problem_level" type="LEVEL" minOccurs="0" maxOccurs="1"
                   description="úroveň chybové hlášky pro samotnou validaci externím nástrojem, defaultně ERROR"/>
        </params-def>
    </validationFunction>

    <validation functionName="checkBibliographicMetadataMatchProfile">
        <description>Zkontroluje, zda všechny entity daného typu (např. kapitoly, svazky/ročníky, ...) jsou validní
            podle určených metadatových profilů. A to jak MODS tak Dublin Core verze záznamů.
        </description>
        <params>
            <value name="mets_file" type="FILE"/>
            <value name="entity_type" type="ENTITY_TYPE"/>
            <value name="profile_detection_xpath" type="STRING"
                   description="Xpath výraz, který vrátí základní název profilu, který má být pro validaci použit.
                   Např. title, volume_multivolume, internalpart_chapter, issue, apod.
                   Xpath výraz se vyhodnocuje vzhledem k elementu mods:mods MODS záznamu analyzovaného entity, ale v rámci celého xml souboru PRIMARY-METS.
                   Lze se tedy jednak odkazovat na obsah MODS záznamu enity, ale i na jiné části PRIMARY-METS."/>
        </params>
    </validation>

    <validationFunction name="checkMixIsValidByXsd">
        <description>Zkontroluje, že MIX záznamy v METS souborech jsou validní podle XML Schema (mix_2.0.xsd).
        </description>
        <params-def>
            <value name="xsd_file" type="FILE"/>
            <value name="mets_files" type="FILE_LIST"/>
            <value name="level" type="LEVEL" description="Úroveň chybové hlášky, pokud neprojde validace podle XSD."
                   minOccurs="0" maxOccurs="1"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkPremisIsValidByXsd">
        <description>Zkontroluje, že MIX záznamy v METS souborech jsou validní podle XML Schema (mix_2.0.xsd).
        </description>
        <params-def>
            <value name="xsd_file" type="FILE"/>
            <value name="mets_files" type="FILE_LIST"/>
            <value name="level" type="LEVEL" description="Úroveň chybové hlášky, pokud neprojde validace podle XSD."
                   minOccurs="0" maxOccurs="1"/>
        </params-def>
    </validationFunction>

    <validationFunction name="checkCopyrightMdIsValidByXsd">
        <description>Zkontroluje, že CopyrightMD záznamy v primárním a sekundárních METS souborech jsou validní podle
            XML Schema (cmd_0.91.xsd).
        </description>
        <params-def>
            <value name="xsd_file" type="FILE"/>
            <value name="mets_files" type="FILE_LIST" min="0" maxOccurs="unbound"/>
            <value name="mets_file" type="FILE_LIST" min="0" maxOccurs="unbound"/>
            <value name="level" type="LEVEL" description="Úroveň chybové hlášky, pokud neprojde validace podle XSD."
                   minOccurs="0" maxOccurs="1"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkSecondaryMetsFilesecContainsAllFilegroups">
        <params-def>
            <value name="secondary-mets_files" type="FILE_LIST"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkSecondaryMetsFilegroupReferencesSingleFile">
        <params-def>
            <value name="psp_dir" type="FILE"/>
            <value name="secondary-mets_files" type="FILE_LIST"/>
            <value name="referenced_files" type="FILE_LIST"/>
            <value name="filegroup_id" type="STRING"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkMetsAmdsecElementsMatchProfile">
        <description>Zkontroluje, že zvolený potomek elementu amdSec (techMD/digiprovMD pro MIX/PREMIS) splňuje
            požadovaný profil.
        </description>
        <params-def>
            <value name="mets_files" type="FILE_LIST" min="0" maxOccurs="unbound"/>
            <value name="mets_file" type="FILE_LIST" min="0" maxOccurs="unbound"/>
            <value name="element_xpath" type="STRING"/>
            <value name="element_must_exist" type="BOOLEAN"/>
            <value name="profile_id" type="STRING"/>
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkPremisLinks">
        <description>Zkontroluje, že odkazy mezi PREMIS Objekty, Událostmi a Agenty musí být korektní a úplné.
        </description>
        <params-def>
            <value name="mets_files" type="FILE_LIST" min="0" maxOccurs="unbound"/>
            <value name="mets_file" type="FILE_LIST" min="0" maxOccurs="unbound"/>
            <!--<value name="element_xpath" type="STRING"/>
            <value name="element_must_exist" type="BOOLEAN"/>
            <value name="profile_id" type="STRING"/>-->
        </params-def>
    </validationFunction>

    <validationFunction functionName="checkPrimaryMetsLogicalMapOk">
        <params>
            <value name="primary-mets_file" type="FILE"/>
            <value name="div_types_allowed" type="STRING_LIST"/>
        </params>
    </validationFunction>

    <validationFunction functionName="checkPrimaryMetsPhysicalMapOk">
        <params>
            <value name="primary-mets_file" type="FILE"/>
            <value name="expected_top_level_div_type" type="STRING" minOccurs="0"/>
            <value name="filegroups_to_check" type="STRING_LIST"/>
            <value name="page_types" type="STRING_LIST"/>
        </params>
    </validationFunction>

    <validationFunction functionName="checkPrimaryMetsStructLinksOk">
        <params>
            <value name="primary-mets_file" type="FILE"/>
        </params>
    </validationFunction>

    <validationFunction functionName="checkSecondaryMetsPhysicalMapOk">
        <params>
            <value name="secondary-mets_files" type="FILE_LIST"/>
            <value name="expected_page_type" type="STRING"/>
            <value name="filegroups_to_check" type="STRING_LIST"/>
        </params>
    </validationFunction>


</validationFunctions>
